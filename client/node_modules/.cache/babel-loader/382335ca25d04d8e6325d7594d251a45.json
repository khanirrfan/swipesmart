{"ast":null,"code":"var _jsxFileName = \"/home/irfan/Desktop/go-workspace/src/github.com/swipesmart/client/src/components/jobs/jobs.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport JobItem from './jobItem';\nimport { getAllJobs } from '../../actions/jobs';\nimport Spinner from '../layout/Spinner'; // import { getCurrentProfile } from '../../actions/profile';\n\nconst Jobs = ({\n  getAllJobs,\n  // getCurrentProfile,\n  // deleteAccount,\n  auth: {\n    user\n  },\n  profile: {\n    profile,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getAllJobs();\n  }, [getAllJobs]);\n  return loading && profile === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large  text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Jobs\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), \" Welcome \", user && user.username, \"to the SwipeSmart\"), React.createElement(\"div\", {\n    className: \"posts\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, profile.map(job => React.createElement(JobItem, {\n    key: job._id,\n    job: job,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }))));\n};\n\nJobs.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  // deleteAccount: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile\n})(Jobs);","map":{"version":3,"sources":["/home/irfan/Desktop/go-workspace/src/github.com/swipesmart/client/src/components/jobs/jobs.js"],"names":["React","useEffect","Fragment","PropTypes","connect","JobItem","getAllJobs","Spinner","Jobs","auth","user","profile","loading","username","map","job","_id","propTypes","getCurrentProfile","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,OAAOC,OAAP,MAAoB,mBAApB,C,CACA;;AACA,MAAMC,IAAI,GAAG,CAAC;AACVF,EAAAA,UADU;AAEV;AACA;AACAG,EAAAA,IAAI,EAAE;AAAEC,IAAAA;AAAF,GAJI;AAKVC,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX;AALC,CAAD,KAMP;AACFX,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,UAAU;AACX,GAFM,EAEJ,CAACA,UAAD,CAFI,CAAT;AAIE,SAAOM,OAAO,IAAID,OAAO,KAAK,IAAvB,GACL,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAGL,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAI,IAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAGA;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eACyCD,IAAI,IAAIA,IAAI,CAACG,QADtD,sBAHA,EAMA;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIF,OAAO,CAACG,GAAR,CAAYC,GAAG,IACf,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAIA,GAAG,CAACC,GAApB;AAAyB,IAAA,GAAG,EAAGD,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAFJ,CANA,CAHF;AAmBL,CA9BD;;AAgCAP,IAAI,CAACS,SAAL,GAAiB;AACbC,EAAAA,iBAAiB,EAAEf,SAAS,CAACgB,IAAV,CAAeC,UADrB;AAEb;AACAX,EAAAA,IAAI,EAAEN,SAAS,CAACkB,MAAV,CAAiBD,UAHV;AAIbT,EAAAA,OAAO,EAAER,SAAS,CAACkB,MAAV,CAAiBD;AAJb,CAAjB;;AAOE,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCd,EAAAA,IAAI,EAAEc,KAAK,CAACd,IADoB;AAEhCE,EAAAA,OAAO,EAAEY,KAAK,CAACZ;AAFiB,CAAL,CAA7B;;AAIF,eAAeP,OAAO,CAClBkB,eADkB,EAElB;AAACJ,EAAAA;AAAD,CAFkB,CAAP,CAGZV,IAHY,CAAf","sourcesContent":["import React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport JobItem from './jobItem';\nimport { getAllJobs } from '../../actions/jobs';\nimport Spinner from '../layout/Spinner';\n// import { getCurrentProfile } from '../../actions/profile';\nconst Jobs = ({\n    getAllJobs,\n    // getCurrentProfile,\n    // deleteAccount,\n    auth: { user },\n    profile: { profile, loading }\n}) => {\n    useEffect(() => {\n        getAllJobs();\n      }, [getAllJobs]);\n    \n      return loading && profile === null ? (\n        <Spinner />\n      ):(\n        <Fragment>\n        <h1 className='large \n        text-primary'>Jobs</h1>\n        <p className='lead'>\n          <i className='fas fa-user' /> Welcome {user && user.username}to the SwipeSmart\n        </p>\n        <div className=\"posts\">\n        {\n            profile.map(job =>(\n            <JobItem key ={ job._id} job ={job} />\n        ))}\n\n        </div>\n        \n        </Fragment>\n    )\n}\n\nJobs.propTypes = {\n    getCurrentProfile: PropTypes.func.isRequired,\n    // deleteAccount: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired\n  };\n  \n  const mapStateToProps = state => ({\n    auth: state.auth,\n    profile: state.profile\n  });\nexport default connect(\n    mapStateToProps, \n    {getCurrentProfile}\n) (Jobs)"]},"metadata":{},"sourceType":"module"}