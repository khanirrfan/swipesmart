{"ast":null,"code":"var _jsxFileName = \"/home/irfan/Desktop/go-workspace/src/github.com/swipesmart/client/src/components/jobs/jobs.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport JobItem from './jobItem';\nimport { getJobs } from '../../actions/jobs';\nimport Spinner from '../layout/Spinner';\n\nconst Jobs = ({\n  getJobs,\n  job: {\n    jobs,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getJobs();\n  }, [getJobs]);\n  return loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Jobs\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), \" Welcome to the SwipeSmart\"), React.createElement(\"div\", {\n    className: \"posts\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, jobs.map(job => React.createElement(JobItem, {\n    key: job._id,\n    job: job,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }))));\n};\n\nJobs.propTypes = {\n  getJobs: PropTypes.func.isRequired,\n  job: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  job: state.job\n});\n\nexport default connect(mapStateToProps, {\n  getJobs\n})(Jobs);","map":{"version":3,"sources":["/home/irfan/Desktop/go-workspace/src/github.com/swipesmart/client/src/components/jobs/jobs.js"],"names":["React","useEffect","Fragment","PropTypes","connect","JobItem","getJobs","Spinner","Jobs","job","jobs","loading","map","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACF,EAAAA,OAAD;AAAUG,EAAAA,GAAG,EAAG;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR;AAAhB,CAAD,KAAuC;AAChDV,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,OAAO;AACV,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;AAGA,SAAOK,OAAO,GACV,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADU,GAGV,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAEA;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,+BAFA,EAKA;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEID,IAAI,CAACE,GAAL,CAASH,GAAG,IACZ,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAIA,GAAG,CAACI,GAApB;AAAyB,IAAA,GAAG,EAAGJ,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAFJ,CALA,CAHJ;AAkBH,CAtBD;;AAwBAD,IAAI,CAACM,SAAL,GAAiB;AACbR,EAAAA,OAAO,EAAGH,SAAS,CAACY,IAAV,CAAeC,UADZ;AAEbP,EAAAA,GAAG,EAAGN,SAAS,CAACc,MAAV,CAAiBD;AAFV,CAAjB;;AAIA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BV,EAAAA,GAAG,EAAEU,KAAK,CAACV;AADmB,CAAL,CAA7B;;AAIA,eAAeL,OAAO,CAClBc,eADkB,EAElB;AAACZ,EAAAA;AAAD,CAFkB,CAAP,CAGZE,IAHY,CAAf","sourcesContent":["import React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport JobItem from './jobItem';\nimport {getJobs} from '../../actions/jobs';\nimport Spinner from '../layout/Spinner';\n\nconst Jobs = ({getJobs, job : { jobs, loading}}) => {\n    useEffect(() => {\n        getJobs();\n    }, [getJobs])\n    return loading ? (\n        <Spinner />\n    ):(\n        <Fragment>\n        <h1 className='large text-primary'>Jobs</h1>\n        <p className='lead'>\n          <i className='fas fa-user' /> Welcome to the SwipeSmart\n        </p>\n        <div className=\"posts\">\n        {\n            jobs.map(job =>(\n            <JobItem key ={ job._id} job ={job} />\n        ))}\n\n        </div>\n        \n        </Fragment>\n    )\n}\n\nJobs.propTypes = {\n    getJobs : PropTypes.func.isRequired,\n    job : PropTypes.object.isRequired,\n};\nconst mapStateToProps = state => ({\n    job: state.job\n})\n\nexport default connect(\n    mapStateToProps, \n    {getJobs}\n) (Jobs)"]},"metadata":{},"sourceType":"module"}