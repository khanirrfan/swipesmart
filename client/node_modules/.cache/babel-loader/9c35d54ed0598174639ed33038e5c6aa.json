{"ast":null,"code":"import _objectWithoutProperties from \"/home/irfan/Desktop/go-workspace/src/github.com/swipesmart/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/irfan/Desktop/go-workspace/src/github.com/swipesmart/client/src/components/routing/PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = (_ref) => {\n  let Component = _ref.component,\n      _ref$auth = _ref.auth,\n      isAuthenticated = _ref$auth.isAuthenticated,\n      user = _ref$auth.user,\n      loading = _ref$auth.loading,\n      rest = _objectWithoutProperties(_ref, [\"component\", \"auth\"]);\n\n  if (user && user.type === 'employe') {\n    console.log(user.type);\n    return React.createElement(Route, Object.assign({}, rest, {\n      render: props => isAuthenticated ? React.createElement(Component, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      })) : React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }));\n  } else {\n    return React.createElement(Redirect, {\n      to: \"/dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    });\n  }\n};\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","map":{"version":3,"sources":["/home/irfan/Desktop/go-workspace/src/github.com/swipesmart/client/src/components/routing/PrivateRoute.js"],"names":["React","Route","Redirect","PropTypes","connect","PrivateRoute","Component","component","auth","isAuthenticated","user","loading","rest","type","console","log","props","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,YAAY,GAAG,UAIf;AAAA,MAHOC,SAGP,QAHJC,SAGI;AAAA,uBAFJC,IAEI;AAAA,MAFIC,eAEJ,aAFIA,eAEJ;AAAA,MAFqBC,IAErB,aAFqBA,IAErB;AAAA,MAF2BC,OAE3B,aAF2BA,OAE3B;AAAA,MADDC,IACC;;AACJ,MAAIF,IAAI,IAAIA,IAAI,CAACG,IAAL,KAAY,SAAxB,EAAkC;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACG,IAAjB;AAEA,WACA,oBAAC,KAAD,oBACMD,IADN;AAEE,MAAA,MAAM,EAAEI,KAAK,IACXP,eAAe,GAAG,oBAAC,SAAD,oBAAeO,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAH,GAA8B,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADA;AAQD,GAXC,MAWK;AACL,WACE,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;AACA,CArBD;;AAsBAX,YAAY,CAACY,SAAb,GAAyB;AACvBT,EAAAA,IAAI,EAAEL,SAAS,CAACe,MAAV,CAAiBC;AADA,CAAzB;;AAIA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCb,EAAAA,IAAI,EAAEa,KAAK,CAACb;AADoB,CAAL,CAA7B;;AAIA,eAAeJ,OAAO,CAACgB,eAAD,CAAP,CAAyBf,YAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = ({\n  component: Component,\n  auth: { isAuthenticated, user, loading },\n  ...rest\n}) => {\n  if (user && user.type==='employe'){\n  console.log(user.type)\n\n  return (\n  <Route\n    {...rest}\n    render={props =>\n      isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\n    }\n  />\n);\n} else {\n  return (\n    <Redirect to=\"/dashboard\" />\n  )\n}\n}\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n"]},"metadata":{},"sourceType":"module"}