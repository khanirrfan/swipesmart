{"ast":null,"code":"var _jsxFileName = \"/home/irfan/Desktop/go-workspace/src/github.com/swipesmart/client/src/components/jobs/jobs.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport Link from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getJobs } from '../../actions/jobs';\nimport { LOGIN_FAIL } from '../../actions/types';\n\nconst Jobs = ({\n  getJobs,\n  isAuthenticated\n}) => {\n  useEffect(() => {\n    getJobs();\n  }, [getJobs]);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Jobs\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), \" Welcome to the SwipeSmart\"));\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: PropTypes.bool,\n  job: state.jobs\n});\n\nexport default connect(mapStateToProps, {\n  getJobs\n})(Jobs);","map":{"version":3,"sources":["/home/irfan/Desktop/go-workspace/src/github.com/swipesmart/client/src/components/jobs/jobs.js"],"names":["React","useEffect","Fragment","Link","PropTypes","connect","Spinner","getJobs","LOGIN_FAIL","Jobs","isAuthenticated","mapStateToProps","state","bool","job","jobs"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,SAAQC,OAAR,QAAsB,oBAAtB;AACA,SAASC,UAAT,QAA2B,qBAA3B;;AACA,MAAMC,IAAI,GAAG,CAAC;AAACF,EAAAA,OAAD;AAAUG,EAAAA;AAAV,CAAD,KAAgC;AACzCT,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,OAAO;AACV,GAFQ,EAEP,CAACA,OAAD,CAFO,CAAT;AAGA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAEA;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,+BAFA,CADJ;AAQH,CAZD;;AAcA,MAAMI,eAAe,GAAGC,KAAK,KAAK;AAC9BF,EAAAA,eAAe,EAAEN,SAAS,CAACS,IADG;AAE9BC,EAAAA,GAAG,EAAEF,KAAK,CAACG;AAFmB,CAAL,CAA7B;;AAIA,eAAeV,OAAO,CAClBM,eADkB,EAElB;AAACJ,EAAAA;AAAD,CAFkB,CAAP,CAGZE,IAHY,CAAf","sourcesContent":["import React, { useEffect, Fragment } from 'react';\nimport Link from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\n\nimport {getJobs} from '../../actions/jobs';\nimport { LOGIN_FAIL } from '../../actions/types';\nconst Jobs = ({getJobs, isAuthenticated}) => {\n    useEffect(() => {\n        getJobs();\n    },[getJobs])\n    return (\n        <Fragment>\n        <h1 className='large text-primary'>Jobs</h1>\n        <p className='lead'>\n          <i className='fas fa-user' /> Welcome to the SwipeSmart\n        </p>\n        </Fragment>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: PropTypes.bool,\n    job: state.jobs\n  });\nexport default connect(\n    mapStateToProps, \n    {getJobs}\n) (Jobs)"]},"metadata":{},"sourceType":"module"}