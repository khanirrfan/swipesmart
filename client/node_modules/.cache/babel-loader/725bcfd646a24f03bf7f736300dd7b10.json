{"ast":null,"code":"import _objectSpread from \"/home/irfan/Desktop/go-workspace/src/github.com/swipesmart/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/irfan/Desktop/go-workspace/src/github.com/swipesmart/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/irfan/Desktop/go-workspace/src/github.com/swipesmart/client/src/components/jobs/createJobs.js\";\nimport React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { addJob } from '../../actions/jobs';\nimport { connect } from 'react-redux';\n\nconst CreateJobs = ({\n  addJob\n}) => {\n  const _useState = useState({\n    jobTitle: '',\n    experience: '',\n    skills: '',\n    from: '',\n    to: '',\n    Country: '',\n    jobDescription: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1];\n\n  const jobTitle = formData.jobTitle,\n        experience = formData.experience,\n        skills = formData.skills,\n        from = formData.from,\n        to = formData.to,\n        Country = formData.Country,\n        jobDescription = formData.jobDescription;\n\n  const onChange = e => setFormData(_objectSpread({}, formData, {\n    [e.target.name]: e.target.value\n  }));\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Create Job\"), React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"* = required field\"), React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: e => {\n      e.preventDefault();\n      createJob(formData);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"* job title\",\n    name: \"jobTitle\",\n    value: jobTitle,\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"* Degree or Certificate\",\n    name: \"experience\",\n    value: experience,\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Field of Study\",\n    name: \"skills\",\n    value: skills,\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"From Date\"), React.createElement(\"input\", {\n    type: \"date\",\n    name: \"from\",\n    value: from,\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Country\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"Country\",\n    checked: Country,\n    value: Country,\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), ' '), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"To Date\"), React.createElement(\"input\", {\n    type: \"date\",\n    name: \"to\",\n    value: to,\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    name: \"jobDescription\",\n    cols: \"30\",\n    rows: \"5\",\n    placeholder: \"Job Description\",\n    value: jobDescription,\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(Link, {\n    className: \"btn btn-light my-1\",\n    to: \"/jobs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Go Back\")));\n};\n\nCreateJobs.propTypes = {\n  addJob: PropTypes.func.isRequired\n};\nexport default connect(null, addJob)(CreateJobs);","map":{"version":3,"sources":["/home/irfan/Desktop/go-workspace/src/github.com/swipesmart/client/src/components/jobs/createJobs.js"],"names":["React","Fragment","useState","PropTypes","Link","addJob","connect","CreateJobs","jobTitle","experience","skills","from","to","Country","jobDescription","formData","setFormData","onChange","e","target","name","value","preventDefault","createJob","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, {Fragment,useState} from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { addJob } from '../../actions/jobs';\nimport { connect } from 'react-redux';\n\nconst CreateJobs = ({addJob}) => {\n    const [formData, setFormData] = useState({\n        jobTitle: '',\n        experience: '',\n        skills: '',\n        from: '',\n        to: '',\n        Country: '',\n        jobDescription: ''\n      });\n  const {\n    jobTitle,\n    experience,\n    skills,\n    from,\n    to,\n    Country,\n    jobDescription\n  } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    return (\n        <Fragment>\n        <h1 className='large text-primary'>Create Job</h1>\n        <small>* = required field</small>\n        <form\n          className='form'\n          onSubmit={e => {\n            e.preventDefault();\n            createJob(formData);\n          }}\n        >\n          <div className='form-group'>\n            <input\n              type='text'\n              placeholder='* job title'\n              name='jobTitle'\n              value={jobTitle}\n              onChange={e => onChange(e)}\n              required\n            />\n          </div>\n          <div className='form-group'>\n            <input\n              type='text'\n              placeholder='* Degree or Certificate'\n              name='experience'\n              value={experience}\n              onChange={e => onChange(e)}\n              required\n            />\n          </div>\n          <div className='form-group'>\n            <input\n              type='text'\n              placeholder='Field of Study'\n              name='skills'\n              value={skills}\n              onChange={e => onChange(e)}\n            />\n          </div>\n          <div className='form-group'>\n            <h4>From Date</h4>\n            <input\n              type='date'\n              name='from'\n              value={from}\n              onChange={e => onChange(e)}\n            />\n          </div>\n          <div className='form-group'>\n            <h4>Country</h4>\n              <input\n                type='text'\n                name='Country'\n                checked={Country}\n                value={Country}\n                onChange={e => onChange(e)}\n              />{' '}\n          </div>\n          <div className='form-group'>\n            <h4>To Date</h4>\n            <input\n              type='date'\n              name='to'\n              value={to}\n              onChange={e => onChange(e)}\n            />\n          </div>\n          <div className='form-group'>\n            <textarea\n              name='jobDescription'\n              cols='30'\n              rows='5'\n              placeholder='Job Description'\n              value={jobDescription}\n              onChange={e => onChange(e)}\n            />\n          </div>\n          <input type='submit' className='btn btn-primary my-1' />\n          <Link className='btn btn-light my-1' to='/jobs'>\n            Go Back\n          </Link>\n        </form>\n      </Fragment>\n    )\n}\n\nCreateJobs.propTypes = {\naddJob: PropTypes.func.isRequired,\n};\n\nexport default connect(null, addJob)(CreateJobs)\n"]},"metadata":{},"sourceType":"module"}