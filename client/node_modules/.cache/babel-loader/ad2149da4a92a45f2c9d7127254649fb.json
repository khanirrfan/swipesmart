{"ast":null,"code":"var _jsxFileName = \"/home/irfan/Desktop/go-workspace/src/github.com/swipesmart/client/src/components/jobs/savedJobs.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getSavedJobs } from '../../actions/jobs';\nimport JobItem from './jobItem';\nimport Spinner from '../layout/Spinner';\nimport { connect } from 'react-redux';\n\nconst SavedJobs = ({\n  getSavedJobs,\n  jobs: {\n    jobsApplied,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getSavedJobs();\n  }, [getSavedJobs]);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Applied Jobs\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fab fa-connectdevelop\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), \" Browse jobs\"), React.createElement(\"div\", {\n    className: \"profiles\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, jobsApplied && jobsApplied.length > 0 ? jobsApplied.map(item => React.createElement(JobItem, {\n    key: item._id,\n    item: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  })) : React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"No jobs found...\"))));\n};\n\nSavedJobs.propTypes = {\n  appliedJobs: PropTypes.func.isRequired,\n  jobs: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  jobs: state.jobs\n});\n\nexport default connect(mapStateToProps, {\n  getSavedJobs\n})(SavedJobs);","map":{"version":3,"sources":["/home/irfan/Desktop/go-workspace/src/github.com/swipesmart/client/src/components/jobs/savedJobs.js"],"names":["React","Fragment","useEffect","PropTypes","getSavedJobs","JobItem","Spinner","connect","SavedJobs","jobs","jobsApplied","loading","length","map","item","_id","propTypes","appliedJobs","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AACA,MAAMC,SAAS,GAAG,CAAC;AAACJ,EAAAA,YAAD;AAAeK,EAAAA,IAAI,EAAC;AAACC,IAAAA,WAAD;AAAcC,IAAAA;AAAd;AAApB,CAAD,KAAiD;AAC/DT,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,YAAY;AACf,GAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;AAGA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACDO,OAAO,GACN,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAGN,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,iBAFF,EAKE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEMD,WAAW,IAAIA,WAAW,CAACE,MAAZ,GAAqB,CAApC,GACIF,WAAW,CAACG,GAAZ,CAAgBC,IAAI,IACxB,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,IAAI,CAACC,GAAnB;AAAwB,IAAA,IAAI,EAAED,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADI,CADJ,GAKF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPJ,CALF,CAJA,CADJ;AAwBH,CA5BD;;AA8BAN,SAAS,CAACQ,SAAV,GAAsB;AAClBC,EAAAA,WAAW,EAAEd,SAAS,CAACe,IAAV,CAAeC,UADV;AAElBV,EAAAA,IAAI,EAAEN,SAAS,CAACiB,MAAV,CAAiBD;AAFL,CAAtB;;AAKE,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCb,EAAAA,IAAI,EAAEa,KAAK,CAACb;AADoB,CAAL,CAA7B;;AAGF,eAAeF,OAAO,CAACc,eAAD,EAAiB;AAACjB,EAAAA;AAAD,CAAjB,CAAP,CAAwCI,SAAxC,CAAf","sourcesContent":["import React, {Fragment, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport { getSavedJobs } from '../../actions/jobs';\nimport JobItem from './jobItem';\nimport Spinner from '../layout/Spinner';\nimport { connect } from 'react-redux';\nconst SavedJobs = ({getSavedJobs, jobs:{jobsApplied, loading}}) => {\n    useEffect(() => {\n        getSavedJobs();\n    }, [getSavedJobs]);\n    return (\n        <Fragment>\n      {loading ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <h1 className='large text-primary'>Applied Jobs</h1>\n          <p className='lead'>\n            <i className='fab fa-connectdevelop' /> Browse jobs\n          </p>\n          <div className='profiles'>\n            {\n                jobsApplied && jobsApplied.length > 0 ? (\n                    jobsApplied.map(item => (\n                <JobItem key={item._id} item={item} />\n              ))\n            ) : (\n              <h4>No jobs found...</h4>\n            )}\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n    )\n}\n\nSavedJobs.propTypes = {\n    appliedJobs: PropTypes.func.isRequired,\n    jobs: PropTypes.object.isRequired\n  };\n  \n  const mapStateToProps = state => ({\n    jobs: state.jobs\n  });\nexport default connect(mapStateToProps,{getSavedJobs})(SavedJobs)\n"]},"metadata":{},"sourceType":"module"}