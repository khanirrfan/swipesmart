{"ast":null,"code":"import axios from 'axios';\nimport { JOB_ERROR, JOB_PROFILE, APPLIED_JOB, REJECTED_JOB, SAVED_JOBS } from './types';\nimport { setAlert } from './alert'; // get all jobs\n\nexport const getJobs = () => async dispatch => {\n  try {\n    const res = await axios.get('/jobs');\n    console.log(res.data);\n    dispatch({\n      type: JOB_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: JOB_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // save job\n\nexport const saveJob = item => async dispatch => {\n  console.log(item);\n\n  try {\n    await axios.post('/savejob', item);\n    dispatch(setAlert('job saved successfully', 'success'));\n  } catch (err) {\n    dispatch({\n      type: JOB_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // reject job\n\nexport const rejectJob = item => async dispatch => {\n  console.log(item);\n\n  try {\n    await axios.post('/rejectjob', item);\n    dispatch(setAlert('You have reject this job', 'success'));\n  } catch (err) {\n    dispatch({\n      type: JOB_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // apply job\n\nexport const applyJob = item => async dispatch => {\n  console.log(item);\n  item.status = 'applied';\n\n  try {\n    await axios.post('/appliedjob', item);\n    dispatch(setAlert('You have successfully applied to this job', 'success'));\n  } catch (err) {\n    dispatch({\n      type: JOB_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // get applied job\n\nexport const appliedJobs = () => async dispatch => {\n  try {\n    const res = await axios.get('/getappliedjobs');\n    console.log(\"response:\", res.data);\n    dispatch({\n      type: APPLIED_JOB,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: JOB_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // get REJECTED job\n\nexport const getRejectedJobs = () => async dispatch => {\n  try {\n    const res = await axios.get('/getrejectedjobs');\n    console.log(\"response:\", res.data);\n    dispatch({\n      type: REJECTED_JOB,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: JOB_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // get REJECTED job\n\nexport const getSavedJobs = () => async dispatch => {\n  try {\n    const res = await axios.get('/getsavedjobs');\n    console.log(\"response:\", res.data);\n    dispatch({\n      type: SAVED_JOBS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: JOB_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/home/irfan/Desktop/go-workspace/src/github.com/swipesmart/client/src/actions/jobs.js"],"names":["axios","JOB_ERROR","JOB_PROFILE","APPLIED_JOB","REJECTED_JOB","SAVED_JOBS","setAlert","getJobs","dispatch","res","get","console","log","data","type","payload","err","msg","response","statusText","status","saveJob","item","post","rejectJob","applyJob","appliedJobs","getRejectedJobs","getSavedJobs"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { JOB_ERROR, JOB_PROFILE, APPLIED_JOB, REJECTED_JOB, SAVED_JOBS } from './types';\nimport { setAlert } from './alert';\n\n// get all jobs\nexport const getJobs = () => async dispatch => {\n    try {\n        const res = await axios.get('/jobs');\n        console.log(res.data);\n        dispatch({\n            type:JOB_PROFILE,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type:JOB_ERROR,\n            payload:{msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// save job\nexport const saveJob = (item) => async dispatch => {\n    console.log(item);\n    try {\n        await axios.post('/savejob', item);\n        dispatch(setAlert('job saved successfully', 'success'));\n    } catch (err) {\n        dispatch({\n            type:JOB_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status}\n        })\n    }\n}\n// reject job\nexport const rejectJob = (item) => async dispatch => {\n    console.log(item);\n    try {\n        await axios.post('/rejectjob', item);\n        dispatch(setAlert('You have reject this job', 'success'));\n    } catch (err) {\n        dispatch({\n            type:JOB_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status}\n        })\n    }\n}\n\n// apply job\nexport const applyJob = (item) => async dispatch => {\n    console.log(item);\n    item.status = 'applied'\n    try {\n        await axios.post('/appliedjob', item);\n        dispatch(setAlert('You have successfully applied to this job', 'success'));\n    } catch (err) {\n        dispatch({\n            type:JOB_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status}\n        })\n    }\n}\n\n// get applied job\nexport const appliedJobs = () => async dispatch => {\n    try {\n        const res = await axios.get('/getappliedjobs');\n        console.log(\"response:\", res.data)\n        dispatch({\n            type:APPLIED_JOB,\n            payload:res.data\n        })\n    } catch (err) {\n        dispatch({\n            type:JOB_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status}\n        })\n    }\n}\n\n// get REJECTED job\nexport const getRejectedJobs = () => async dispatch => {\n    try {\n        const res = await axios.get('/getrejectedjobs');\n        console.log(\"response:\", res.data)\n        dispatch({\n            type:REJECTED_JOB,\n            payload:res.data\n        })\n    } catch (err) {\n        dispatch({\n            type:JOB_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status}\n        })\n    }\n}\n\n// get REJECTED job\nexport const getSavedJobs = () => async dispatch => {\n    try {\n        const res = await axios.get('/getsavedjobs');\n        console.log(\"response:\", res.data)\n        dispatch({\n            type:SAVED_JOBS,\n            payload:res.data\n        })\n    } catch (err) {\n        dispatch({\n            type:JOB_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status}\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}