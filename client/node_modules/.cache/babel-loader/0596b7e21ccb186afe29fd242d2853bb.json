{"ast":null,"code":"var _jsxFileName = \"/home/irfan/Desktop/go-workspace/src/github.com/swipesmart/client/src/components/jobs/jobs.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport ProfileItem from '../profiles/ProfileItem'; // import { getAllJobs } from '../../actions/jobs';\n\nimport { getProfiles } from '../../actions/jobs';\n\nconst Jobs = ({\n  getProfiles,\n  profile: {\n    profiles,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getProfiles();\n    console.log(\"profiles:\", profiles);\n  }, [getProfiles]);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Developers\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fab fa-connectdevelop\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), \" Browse and connect with developers\"), React.createElement(\"div\", {\n    className: \"profiles\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, profiles.length > 0 ? profiles.map(profile => React.createElement(ProfileItem, {\n    key: profile._id,\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })) : React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"No jobs found...\"))));\n};\n\nJobs.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getProfiles\n})(Jobs);","map":{"version":3,"sources":["/home/irfan/Desktop/go-workspace/src/github.com/swipesmart/client/src/components/jobs/jobs.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","ProfileItem","getProfiles","Jobs","profile","profiles","loading","console","log","length","map","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,WAAP,MAAwB,yBAAxB,C,CACA;;AACA,SAASC,WAAT,QAA4B,oBAA5B;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAED,EAAAA,WAAF;AAAeE,EAAAA,OAAO,EAAE;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ;AAAxB,CAAD,KAAqD;AAC9DT,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,WAAW;AACXK,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBH,QAAzB;AACD,GAHQ,EAGN,CAACH,WAAD,CAHM,CAAT;AAKF,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,OAAO,GACN,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAGN,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,wCAFF,EAME;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QAAQ,CAACI,MAAT,GAAkB,CAAlB,GACGJ,QAAQ,CAACK,GAAT,CAAaN,OAAO,IACpB,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,OAAO,CAACO,GAA1B;AAA+B,IAAA,OAAO,EAAEP,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADH,GAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANJ,CANF,CAJJ,CADF;AAwBD,CA9BD;;AAgCAD,IAAI,CAACS,SAAL,GAAiB;AACbV,EAAAA,WAAW,EAAEJ,SAAS,CAACe,IAAV,CAAeC,UADf;AAEbV,EAAAA,OAAO,EAAEN,SAAS,CAACiB,MAAV,CAAiBD;AAFb,CAAjB;;AAKE,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCb,EAAAA,OAAO,EAAEa,KAAK,CAACb;AADiB,CAAL,CAA7B;;AAIF,eAAeL,OAAO,CAClBiB,eADkB,EAElB;AAAEd,EAAAA;AAAF,CAFkB,CAAP,CAGbC,IAHa,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport ProfileItem from '../profiles/ProfileItem';\n// import { getAllJobs } from '../../actions/jobs';\nimport { getProfiles } from '../../actions/jobs'\n\nconst Jobs = ({ getProfiles, profile: { profiles, loading } }) => {\n    useEffect(() => {\n      getProfiles();\n      console.log(\"profiles:\", profiles);\n    }, [getProfiles]);\n  \n  return (\n    <Fragment>\n      {loading ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <h1 className='large text-primary'>Developers</h1>\n          <p className='lead'>\n            <i className='fab fa-connectdevelop' /> Browse and connect with\n            developers\n          </p>\n          <div className='profiles'>\n            {profiles.length > 0 ? (\n                profiles.map(profile => (\n                <ProfileItem key={profile._id} profile={profile} />\n              ))\n            ) : (\n              <h4>No jobs found...</h4>\n            )}\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nJobs.propTypes = {\n    getProfiles: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired\n  };\n  \n  const mapStateToProps = state => ({\n    profile: state.profile\n  });\n\nexport default connect(\n    mapStateToProps,\n    { getProfiles }\n)(Jobs);\n"]},"metadata":{},"sourceType":"module"}