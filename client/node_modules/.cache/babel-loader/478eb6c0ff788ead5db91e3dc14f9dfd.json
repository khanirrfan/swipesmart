{"ast":null,"code":"var _jsxFileName = \"/home/irfan/Desktop/go-workspace/src/github.com/swipesmart/client/src/components/jobs/jobs.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport JobItem from './jobItem';\nimport { getAllJobs } from '../../actions/jobs';\n\nconst Jobs = ({\n  getAllJobs,\n  job: {\n    jobLists,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getAllJobs();\n  }, [getAllJobs]);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Developers\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fab fa-connectdevelop\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), \" Browse and connect with developers\"), React.createElement(\"div\", {\n    className: \"profiles\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, jobLists.length > 0 ? jobLists.map(list => React.createElement(JobItem, {\n    key: list._id,\n    profile: list,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })) : React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"No jobs found...\"))));\n};\n\nJobs.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  job: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  job: state.job\n});\n\nexport default connect(mapStateToProps, {\n  getAllJobs\n})(Jobs);","map":{"version":3,"sources":["/home/irfan/Desktop/go-workspace/src/github.com/swipesmart/client/src/components/jobs/jobs.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","JobItem","getAllJobs","Jobs","job","jobLists","loading","length","map","list","_id","propTypes","getProfiles","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,UAAT,QAA2B,oBAA3B;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAED,EAAAA,UAAF;AAAcE,EAAAA,GAAG,EAAE;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ;AAAnB,CAAD,KAAgD;AAC3DT,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,UAAU;AACX,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;AAIA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,OAAO,GACN,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAGN,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,wCAFF,EAME;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QAAQ,CAACE,MAAT,GAAkB,CAAlB,GACCF,QAAQ,CAACG,GAAT,CAAaC,IAAI,IACf,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,IAAI,CAACC,GAAnB;AAAwB,IAAA,OAAO,EAAED,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,GAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANJ,CANF,CAJJ,CADF;AAwBD,CA7BD;;AA+BAN,IAAI,CAACQ,SAAL,GAAiB;AACfC,EAAAA,WAAW,EAAEd,SAAS,CAACe,IAAV,CAAeC,UADb;AAEfV,EAAAA,GAAG,EAAEN,SAAS,CAACiB,MAAV,CAAiBD;AAFP,CAAjB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCb,EAAAA,GAAG,EAAEa,KAAK,CAACb;AADqB,CAAL,CAA7B;;AAIA,eAAeL,OAAO,CACpBiB,eADoB,EAEpB;AAAEd,EAAAA;AAAF,CAFoB,CAAP,CAGbC,IAHa,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport JobItem from './jobItem';\nimport { getAllJobs } from '../../actions/jobs';\n\nconst Jobs = ({ getAllJobs, job: { jobLists, loading } }) => {\n  useEffect(() => {\n    getAllJobs();\n  }, [getAllJobs]);\n\n  return (\n    <Fragment>\n      {loading ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <h1 className='large text-primary'>Developers</h1>\n          <p className='lead'>\n            <i className='fab fa-connectdevelop' /> Browse and connect with\n            developers\n          </p>\n          <div className='profiles'>\n            {jobLists.length > 0 ? (\n              jobLists.map(list => (\n                <JobItem key={list._id} profile={list} />\n              ))\n            ) : (\n              <h4>No jobs found...</h4>\n            )}\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nJobs.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  job: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  job: state.job\n});\n\nexport default connect(\n  mapStateToProps,\n  { getAllJobs }\n)(Jobs);\n"]},"metadata":{},"sourceType":"module"}