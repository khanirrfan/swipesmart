{"ast":null,"code":"var _jsxFileName = \"/home/irfan/Desktop/go-workspace/src/github.com/swipesmart/client/src/components/jobs/jobs.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport JobItem from './jobItem';\nimport { getJobs } from '../../actions/jobs';\nimport Job from './job';\n\nconst Jobs = ({\n  getJobs,\n  profile: {\n    profile,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getJobs();\n  }, [getJobs]);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"JOB\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fab fa-connectdevelop\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), \" Browse jobs\"), React.createElement(\"div\", {\n    className: \"profiles\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, profile && profile.length > 0 ? profile.map(item => React.createElement(JobItem, {\n    key: item._id,\n    item: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })) : React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"No jobs found...\"))), React.createElement(\"div\", {\n    className: \"singleJobPage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Job, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })));\n};\n\nJobs.propTypes = {\n  getJobs: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getJobs\n})(Jobs);","map":{"version":3,"sources":["/home/irfan/Desktop/go-workspace/src/github.com/swipesmart/client/src/components/jobs/jobs.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","JobItem","getJobs","Job","Jobs","profile","loading","length","map","item","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEF,EAAAA,OAAF;AAAWG,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX;AAApB,CAAD,KAAgD;AACzDT,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,OAAO;AACV,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;AAIF,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,OAAO,GACN,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAGN,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,iBAFF,EAKE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,OAAO,IAAIA,OAAO,CAACE,MAAR,GAAiB,CAA5B,GACGF,OAAO,CAACG,GAAR,CAAYC,IAAI,IAChB,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,IAAI,CAACC,GAAnB;AAAwB,IAAA,IAAI,EAAED,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADH,GAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANJ,CALF,CAJJ,EAoBE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CApBF,CADF;AA0BD,CA/BD;;AAiCAL,IAAI,CAACO,SAAL,GAAiB;AACbT,EAAAA,OAAO,EAAEJ,SAAS,CAACc,IAAV,CAAeC,UADX;AAEbR,EAAAA,OAAO,EAAEP,SAAS,CAACgB,MAAV,CAAiBD;AAFb,CAAjB;;AAKE,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCX,EAAAA,OAAO,EAAEW,KAAK,CAACX;AADiB,CAAL,CAA7B;;AAIF,eAAeN,OAAO,CAClBgB,eADkB,EAElB;AAAEb,EAAAA;AAAF,CAFkB,CAAP,CAGbE,IAHa,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport JobItem from './jobItem';\nimport { getJobs } from '../../actions/jobs';\nimport Job from './job';\n\nconst Jobs = ({ getJobs, profile: { profile, loading } }) => {\n    useEffect(() => {\n        getJobs();\n    }, [getJobs]);\n  \n  return (\n    <Fragment>\n      {loading ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <h1 className='large text-primary'>JOB</h1>\n          <p className='lead'>\n            <i className='fab fa-connectdevelop' /> Browse jobs\n          </p>\n          <div className='profiles'>\n            {profile && profile.length > 0 ? (\n                profile.map(item => (\n                <JobItem key={item._id} item={item} />\n              ))\n            ) : (\n              <h4>No jobs found...</h4>\n            )}\n          </div>\n        </Fragment>\n      )}\n      <div className=\"singleJobPage\">\n          <Job />\n          </div>\n    </Fragment>\n  );\n};\n\nJobs.propTypes = {\n    getJobs: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired\n  };\n  \n  const mapStateToProps = state => ({\n    profile: state.profile\n  });\n\nexport default connect(\n    mapStateToProps,\n    { getJobs }\n)(Jobs);\n"]},"metadata":{},"sourceType":"module"}