{"ast":null,"code":"var _jsxFileName = \"/home/irfan/Desktop/go-workspace/src/github.com/swipesmart/client/src/components/jobs/savedJobs.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { getSavedJobs } from '../../actions/jobs';\nimport JobItem from './jobItem';\nimport Spinner from '../layout/Spinner';\nimport { connect } from 'react-redux';\n\nconst SavedJobs = ({\n  getSavedJobs,\n  jobs: {\n    jobsSaved,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getSavedJobs();\n  }, [getSavedJobs]);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Saved Jobs\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fab fa-connectdevelop\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), \" Browse jobs\"), React.createElement(\"div\", {\n    className: \"profiles\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, jobsSaved && jobsSaved.length > 0 ? jobsSaved.map(item => React.createElement(JobItem, {\n    key: item._uid,\n    item: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })) : React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"No jobs found...\"))));\n};\n\nSavedJobs.propTypes = {\n  getSavedJobs: PropTypes.func.isRequired,\n  jobs: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  jobs: state.jobs\n});\n\nexport default connect(mapStateToProps, {\n  getSavedJobs\n})(SavedJobs);","map":{"version":3,"sources":["/home/irfan/Desktop/go-workspace/src/github.com/swipesmart/client/src/components/jobs/savedJobs.js"],"names":["React","useEffect","Fragment","PropTypes","getSavedJobs","JobItem","Spinner","connect","SavedJobs","jobs","jobsSaved","loading","length","map","item","_uid","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACJ,EAAAA,YAAD;AAAeK,EAAAA,IAAI,EAAC;AAACC,IAAAA,SAAD;AAAYC,IAAAA;AAAZ;AAApB,CAAD,KAA+C;AAC7DV,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,YAAY;AACf,GAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;AAGA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCO,OAAO,GACN,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAGN,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,iBAFF,EAKE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEID,SAAS,IAAIA,SAAS,CAACE,MAAV,GAAmB,CAAhC,GACIF,SAAS,CAACG,GAAV,CAAcC,IAAI,IACpB,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,IAAI,CAACC,IAAnB;AAAyB,IAAA,IAAI,EAAED,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADE,CADJ,GAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPJ,CALF,CAJF,CADJ;AAwBH,CA5BD;;AA8BAN,SAAS,CAACQ,SAAV,GAAsB;AAClBZ,EAAAA,YAAY,EAAED,SAAS,CAACc,IAAV,CAAeC,UADX;AAElBT,EAAAA,IAAI,EAAEN,SAAS,CAACgB,MAAV,CAAiBD;AAFL,CAAtB;;AAKE,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCZ,EAAAA,IAAI,EAAEY,KAAK,CAACZ;AADoB,CAAL,CAA7B;;AAGF,eAAeF,OAAO,CAACa,eAAD,EAAkB;AAAChB,EAAAA;AAAD,CAAlB,CAAP,CAAyCI,SAAzC,CAAf","sourcesContent":["import React, { useEffect, Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport { getSavedJobs } from '../../actions/jobs';\nimport JobItem from './jobItem';\nimport Spinner from '../layout/Spinner';\nimport { connect } from 'react-redux';\n\nconst SavedJobs = ({getSavedJobs, jobs:{jobsSaved, loading}}) => {\n    useEffect(() => {\n        getSavedJobs();\n    }, [getSavedJobs]);\n    return (\n        <Fragment>\n        {loading ? (\n          <Spinner />\n        ) : (\n          <Fragment>\n            <h1 className='large text-primary'>Saved Jobs</h1>\n            <p className='lead'>\n              <i className='fab fa-connectdevelop' /> Browse jobs\n            </p>\n            <div className='profiles'>\n              {\n                jobsSaved && jobsSaved.length > 0 ? (\n                    jobsSaved.map(item => (\n                  <JobItem key={item._uid} item={item} />\n                ))\n              ) : (\n                <h4>No jobs found...</h4>\n              )}\n            </div>\n          </Fragment>\n        )}\n      </Fragment>\n    )\n}\n\nSavedJobs.propTypes = {\n    getSavedJobs: PropTypes.func.isRequired,\n    jobs: PropTypes.object.isRequired\n  };\n  \n  const mapStateToProps = state => ({\n    jobs: state.jobs\n  });\nexport default connect(mapStateToProps, {getSavedJobs})(SavedJobs)\n"]},"metadata":{},"sourceType":"module"}